1. 
(a) bis.w BIT0,R5

(b) bis.w BIT0,R6 
    bis.w BIT1,R6
    
(c) bic.w BIT2, R7

(d) bic.w BIT2,R8
    bic.w BIT3,R8
    
(e) inv.w BITF,R9
 
 2. (a) if(i>j) f = g+h+10; else f = g-h-10

mov.w R5, R11
mov.w #10,R12
mov.w R6,R13
Comp R7,R8 ;COMP=i>j
jl label
sub.w  R11,R12
sub.w R12,R13
JUMP EXIT

label:
add.w R6,R11
add.w R11,R12
mov.w R12,R4

EXIT:

3. (a) while(save[i]!=k) i++

LOOP: mov.w R7, R12 
inc.w R12  
add.w R10, R1.w
cmp 0(R12), R9 
jnq EXIT  
inc.w R7 
jmp LOOP


EXIT:

4. (a) for(i=0; i<100; i++) A[i] = i*2

mov.w #0, R7
LOOP: mov.w R7,R12
rla R12
mov.w R12,R9(R12)
cmp R12,#100
inc R7
jl LOOP
EXIT:

5. (a) for(i=99; i>=0; i--) A[i] = i*2;

mov.w R7,R12
mov.w #99, R7
LOOP:
rla R12
mov.w R12,R12(R9)

cmp #0, R7
dec.w R7
jge LOOP
